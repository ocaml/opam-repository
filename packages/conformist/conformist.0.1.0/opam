opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively. It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types. Re-use business rules in validators and run it on the client side with js_of_ocaml. Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "ppx_deriving" {>= "4.5" & with-test}
  "ppx_fields_conv" {>= "v0.14.1" & with-test}
]
build: [
  ["dune" "subst"] {pinned}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "3f362dfb4a063f9f694fe5103e7f4ae63f607585"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.1.0/conformist-0.1.0.tbz"
  checksum: [
    "sha256=576eb9ef3eee1b36d6f19bdf685b3e9fbd4fd06da192900dcc10453b2b3cda1c"
    "sha512=40c233284608e45c06332d4e8b920d8a0038b241cbefc5fa1e46f6d4ada76ac771236f87b46d7d732123f687d927f5262ee9f3aec87d42f39d28b380ebbf17e1"
  ]
}
