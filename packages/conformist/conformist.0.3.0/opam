opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "sexplib" {>= "v0.13.0" & with-test}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "b721e42ebf320f1c65fb01360e7efd94afdffc21"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.3.0/conformist-0.3.0.tbz"
  checksum: [
    "sha256=ebc3e3ae1119e4e19e11df940510bf32ab04568d4bdc6ba5f71072a45092b74a"
    "sha512=42d91900faf8849c078b1a7652057fe3b3560223b2b333cf61ceebee6e7bb8f73bdcdee5b9b5ead4c130cdf8c575a085b4e04dbccde202479f7ac0b40bd6b233"
  ]
}
