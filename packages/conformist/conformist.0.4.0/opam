opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "sexplib" {>= "v0.13.0" & with-test}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "3cbbdd26e0159b32b041ee74f9c3a54050e5e993"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.4.0/conformist-0.4.0.tbz"
  checksum: [
    "sha256=cabb3e2c2c828d264703a9e42e0a47ee9d766ce129bca4c20eb511d812622623"
    "sha512=b2c4a36e51cc4239cc95fe32661a6dad0b804810e62040ddc843ead1371b26a72602da5523fb1e4ba125552cdcda91ac53e057b3c224f8950db7a22eecc97094"
  ]
}
