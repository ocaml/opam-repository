opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "sexplib" {>= "v0.13.0" & with-test}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "593c2d9fb35f540f099938ed84edaf83b2e58afd"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.2.1/conformist-0.2.1.tbz"
  checksum: [
    "sha256=80321b97c08f27985a678c64e24224267e420e5efa9f9c5c3a4a7da6aedc6ea8"
    "sha512=1154d81a8e1bc3034889ef7f1e6221ed6a83cb4f401683a4cd48ed9d3d47b6a2c3860fc147675eb5902c1e626873b44d2c1c202648b353600065fc530874af74"
  ]
}
