opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """
Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "ppx_deriving" {>= "4.5" & with-test}
  "ppx_fields_conv" {>= "v0.14.1" & with-test}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "b00a928be064cb43bbeabe817e60eaae30740a8f"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.0.2/conformist-0.0.2.tbz"
  checksum: [
    "sha256=cb4878241d9e705153f9b3bfc0dc2be972a6e5539d0368cf9e4bfdd748c56f82"
    "sha512=bd691be3f20869a84cf6a3dd494d2aa3ec4096e5977fbd48c9da1b344692f4343b9548c0e4e4c43eed2dc235e98e0802a87c065ff4245b84d982c7a4102fae12"
  ]
}
