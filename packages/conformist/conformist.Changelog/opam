opam-version: "2.0"
synopsis:
  "Conformist allows you to define schemas to decode, validate and sanitize input data declaratively"
description: """

Conformist allows you to define schemas to decode, validate and sanitize input data declaratively.
It comes with runtime types for primitive OCaml types such as `int`, `string`, `bool` and `float` but also `Ptime.date`, optional and custom types.
Re-use business rules in validators and run it on the client side with js_of_ocaml.
Arbitrary meta data can be stored in schemas which is useful to build functionality on top of conformist.
"""
maintainer: ["josef@oxidizing.io"]
authors: ["Josef Erben"]
license: "MIT"
homepage: "https://github.com/oxidizing/conformist"
doc: "https://oxidizing.github.io/conformist/"
bug-reports: "https://github.com/oxidizing/conformist/issues"
depends: [
  "dune" {>= "2.4"}
  "ocaml" {>= "4.08.0"}
  "alcotest" {>= "1.2.3" & with-test}
  "ppx_deriving" {>= "4.5" & with-test}
  "ppx_fields_conv" {>= "v0.14.1" & with-test}
]
build: [
  ["dune" "subst"] {pinned}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/oxidizing/conformist.git"
x-commit-hash: "64384a1675c822c3c5ceca1d7fd493dcd274c8bf"
url {
  src:
    "https://github.com/oxidizing/conformist/releases/download/0.2.0/conformist-Changelog.tbz"
  checksum: [
    "sha256=c86dfb75a6d003f7317d2d007f226f45418c771e7788e4c870af78e65cb5f1f2"
    "sha512=65903e11c3f14e70d1aa85edc8e315ecaba56fc2678aace67ae959f26eee12ed933e8df26ce05b298ca14345ee23b3f4ef6d4c66007ea22bf3859c9665cecb7d"
  ]
}
