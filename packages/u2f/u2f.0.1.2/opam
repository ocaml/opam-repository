opam-version: "2.0"
homepage: "https://github.com/roburio/u2f"
dev-repo: "git+https://github.com/roburio/u2f.git"
bug-reports: "https://github.com/roburio/u2f/issues"
doc: "https://roburio.github.io/u2f/doc"
maintainer: [ "team@robur.coop" ]
authors: [ "Reynir Bj√∂rnsson <reynir@reynir.dk>" "Hannes Mehnert <hannes@mehnert.org>" ]
license: "BSD-2-Clause"

build: [
  ["dune" "subst"] {dev}
  ["dune" "build" "-p" name "-j" jobs]
  ["dune" "runtest" "-p" name "-j" jobs] {with-test}
]

depends: [
  "ocaml" {>= "4.08.0"}
  "dune" {>= "2.7"}
  "dream" {dev}
  "ppx_blob" {dev}
  "cmdliner" {dev}
  "logs" {dev}
  "lwt" {dev}
  "yojson"
  "ppx_deriving_yojson"
  "mirage-crypto-ec"
  "mirage-crypto-rng"
  "x509" {>= "0.13.0"}
  "base64" {>= "3.1.0"}
  "cstruct" {>= "6.0.0"}
]

conflicts: [
  "result" {< "1.5"}
]

synopsis: "Universal Second Factor (U2F) implementation in OCaml"
description: """
A server-side implementation of the two-factor authentication standard
Universal Second Factor (U2F). With special (USB, NFC) devices, a
challenge-response authentication using public key cryptography is done.
"""
url {
  src:
    "https://github.com/roburio/u2f/releases/download/v0.1.2/u2f-0.1.2.tbz"
  checksum: [
    "sha256=37b31e6636745172a3d4bce6152dafe497da4ca4e90b582cbfa74bfcf94f621e"
    "sha512=dd0e3535eefa3bd30aa2508ab46055baec580d3c5f8924adba5a92b7ac09e4af0a329f2b8f56c4a0691b71109c86ef3ee5b25337d5ffe11b1496250eeaa24e98"
  ]
}
x-commit-hash: "5129621085dc306c893a94ac86e2cf6d8406bec7"
