opam-version: "2.0"
homepage: "https://github.com/roburio/u2f"
dev-repo: "git+https://github.com/roburio/u2f.git"
bug-reports: "https://github.com/roburio/u2f/issues"
doc: "https://roburio.github.io/u2f/doc"
maintainer: [ "team@robur.coop" ]
authors: [ "Reynir Bj√∂rnsson <reynir@reynir.dk>" "Hannes Mehnert <hannes@mehnert.org>" ]
license: "BSD-2-Clause"

build: [
  ["dune" "subst"] {dev}
  ["dune" "build" "-p" name "-j" jobs]
  ["dune" "runtest" "-p" name "-j" jobs] {with-test}
]

depends: [
  "ocaml" {>= "4.08.0"}
  "dune" {>= "2.7"}
  "dream" {dev}
  "ppx_blob" {dev}
  "cmdliner" {dev}
  "logs" {dev}
  "lwt" {dev}
  "yojson"
  "ppx_deriving_yojson"
  "mirage-crypto-ec"
  "mirage-crypto-rng"
  "x509" {>= "0.13.0" & < "0.15.1"}
  "base64" {>= "3.1.0"}
]

synopsis: "Universal Second Factor (U2F) implementation in OCaml"
description: """
A server-side implementation of the two-factor authentication standard
Universal Second Factor (U2F). With special (USB, NFC) devices, a
challenge-response authentication using public key cryptography is done.
"""
x-commit-hash: "0c16a7fce67f4500b3ba68dfe5ffdbdb1df091bf"
url {
  src:
    "https://github.com/roburio/u2f/releases/download/v0.1.1/u2f-v0.1.1.tbz"
  checksum: [
    "sha256=e122725cdcd6245301e5c28d7cf5bc013e0e8e01c7f34767d135e33a6a57fe98"
    "sha512=e563a61ecb5748fc6409f227b2dec5ecd0181cc2676ee59e765b59b23453c8cc08fe1f917e9b28b2c8465b7f2c0cb2745a389bef752ca2707449344bd616163d"
  ]
}
