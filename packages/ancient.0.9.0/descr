Allows to use in-memory data structures which are larger than available memory and so are kept in swap
Ancient is an OCaml module that allows you to use in-memory data
structures which are larger than available memory and so are kept in
swap. If you try this in normal OCaml code, you'll find that the
machine quickly descends into thrashing as the garbage collector
repeatedly iterates over swapped memory structures. This module lets
you break that limitation. Of course the module doesn't work by magic
:-) If your program tries to access these large structures, they still
need to be swapped back in, but it is suitable for large, sparsely
accessed structures. Secondly, this module allows you to share those
structures between processes. In this mode, the structures are backed
by a disk file, and any process that has read/write access that disk
file can map that file in and see the structures.
