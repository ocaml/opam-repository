opam-version: "2.0"
maintainer: "gerson.xp@gmail.com"
authors: "Gerson Moraes"
homepage: "https://github.com/gersonmoraes/dryunit"
bug-reports: "https://github.com/gersonmoraes/dryunit"
dev-repo: "git+https://github.com/gersonmoraes/dryunit.git"
build: ["jbuilder" "build" "-p" name "-j" jobs]

depends: [
  "ocaml" {>= "4.02.3" & < "4.06"}
  "jbuilder" {build}
  "cppo" {build}
  "ocaml-migrate-parsetree" {build}
  "ppx_tools_versioned"
]
synopsis: "A detection tool for traditional unit testing in OCaml"
description: """
Dryunit is a detection tool for traditional test suites. This is an optional extension that provides similar functionallity as the main package and command line `dryunit` (which is the recommended way to get started).



## Installation

```sh
opam install ppx_dryunit
```



## Usage

It's activated appending this to the end of your `tests/main.ml`:

```ocaml
let () = [%dryunit]
```



Custom definitions are given using a record. All fields are optional and might be in any order.

```ocaml
let () =
  [%dryunit
    { cache_dir   = ".dryunit"
    ; cache       = true
    ; framework   = "alcotest"
    ; ignore      = ""
    ; filter      = ""
    ; detection   = "file"
    ; ignore_path = "self"
    }
  ]
```

For more information, checkout the [repository](https://github.com/gersonmoraes/dryunit)."""
url {
  src: "https://github.com/gersonmoraes/dryunit/archive/0.4.0.tar.gz"
  checksum: "md5=14f1029a3c628eeaef50c025b454215e"
}
