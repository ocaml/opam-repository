opam-version: "2.0"
maintainer:    "anil@recoil.org"
homepage:      "https://github.com/mirage/mirage-console"
bug-reports:   "https://github.com/mirage/mirage-console/issues"
dev-repo: "git+https://github.com/mirage/mirage-console.git"
doc:           "https://mirage.github.io/mirage-console/"
authors:       [ "Anil Madhavapeddy" "David Scott"]
tags:          [ "org:mirage" "org:xapi-project"]
license:       "ISC"

build: [
  [ "jbuilder" "subst"] {pinned}
  [ "jbuilder" "build" "-p" name "-j" jobs ]
]

depends: [
  "ocaml" {>= "4.03.0"}
  "jbuilder" {build & >= "1.0+beta9"}
  "mirage-console" {>= "2.2.0"}
  "lwt"
  "cstruct" {>= "1.9.0"}
  "cstruct-lwt"
]
synopsis: "Implementations of Mirage consoles, for Unix and Xen"
description: """
The Unix version of the console currently uses standard output. The code is in

  unix/console.{ml,mli}

The Xen kernel version of the console uses the primary PV console ring. The
code is in

  xen/console.{ml,mli}

There is also a Unix userspace utility which creates and services Xen consoles
("console backends"):

Connect a console to a VM like this:

```
[root@st30 ~]# ./mirage-console connect trusty
Operating on VM domain id: 19
Creating device 1 (linux device /dev/tty1)
{ ref = 128; event_channel = 13 }
```

Then inside the guest:

```
[root@trusty ~]# cat > /dev/hvc1
hello
there
```

And observe in dom0:

```
hello
there
```

Then hit Control+C and it all cleans up."""
url {
  src:
    "https://github.com/mirage/mirage-console/releases/download/v2.3.4/mirage-console-2.3.4.tbz"
  checksum: "md5=b81bd7033517c1e41527a2055ce0d22f"
}
