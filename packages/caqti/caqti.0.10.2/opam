opam-version: "2.0"
name: "caqti"
authors: ["Petter A. Urkedal"]
maintainer: "paurkedal@gmail.com"
homepage: "https://github.com/paurkedal/ocaml-caqti/"
bug-reports: "https://github.com/paurkedal/ocaml-caqti/issues"
dev-repo: "git+https://github.com/paurkedal/ocaml-caqti.git"
license: "LGPL-3 with OCaml linking exception"

build: [
  ["jbuilder" "build" "-p" name "-j" jobs]
  ["jbuilder" "runtest" "-p" name "-j" jobs] {with-test}
]
depends: [
  "ocaml" {>= "4.04.0"}
  "jbuilder" {build & >= "1.0+beta19"}
  "calendar"
  "ocamlfind" {build}
  "ptime"
  "uri" {>= "1.9.0"}
]
synopsis: "Unified interface to relational database libraries"
description: """
Caqti provides a monadic cooperative-threaded OCaml connector API for
relational databases.

The purpose of Caqti is further to help make applications independent of a
particular database system. This is achieved by defining a common signature,
which is implemented by the database drivers. Connection parameters are
specified as an URI, which is typically provided at run-time. Caqti then
loads a driver which can handle the URI, and provides a first-class module
which implements the driver API and additional convenience functionality.

Caqti does not make assumptions about the structure of the query language,
and only provides the type information needed at the edges of communication
between the OCaml code and the database; i.e. for encoding parameters and
decoding returned tuples. It is hoped that this agnostic choice makes it a
suitable target for higher level interfaces and code generators."""
url {
  src:
    "https://github.com/paurkedal/ocaml-caqti/releases/download/v0.10.2/caqti-0.10.2.tbz"
  checksum: "md5=d18745a703da336054c0d27e78f8be8a"
}
