Inlined Function Composition

`ppx_compose` is a simple syntax extension which rewrites code containing
function compositions into composition-free code, effectively inlining the
composition operators.  The following two operators are supported

    let (%) g f x = g (f x)
    let (%>) f g x = g (f x)

Corresponding definitions are not provided, so partial applications of `(%)`
and `(%>)` will be undefined unless you provide the definitions.

The following rewrites are done:

  * A composition occurring to the left of an application is reduced by
    applying each term of the composition from right to left to the
    argument, ignoring associative variations.

  * A composition which is not the left side of an application is first
    turned into one by Î·-expansion, then the above rule applies.

  * Any partially applied composition operators are passed though unchanged.

E.g.

    h % g % f ==> (fun x -> h (f (g x)))
    h % (g % f) ==> (fun x -> h (f (g x)))
    (g % f) (h % h) ==> g (f (fun x -> h (h x)))
