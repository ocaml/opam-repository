opam-version: "2.0"
maintainer: "opensource@janestreet.com"
authors: ["Jane Street Group, LLC <opensource@janestreet.com>"]
homepage: "https://github.com/janestreet/splay_tree"
bug-reports: "https://github.com/janestreet/splay_tree/issues"
dev-repo: "git+https://github.com/janestreet/splay_tree.git"
license: "Apache-2.0"
build: [
  ["jbuilder" "build" "-p" name "-j" jobs]
]
conflicts: [ "jbuilder" { = "1.0+beta19" } ]
depends: [
  "ocaml" {>= "4.04.1"}
  "core_kernel" {>= "v0.11" & < "v0.12"}
  "ppx_jane" {>= "v0.11" & < "v0.12"}
  "jbuilder" {build & >= "1.0+beta18.1"}
  "ocaml-migrate-parsetree" {>= "1.0"}
]
synopsis: "A splay tree implementation"
description: """
Splay trees are binary search trees that move recently accessed nodes
closer to the root for easier access.  They have amortized O(log
n)-time access for a large enough sequence of primitive operations.

A splay trees may outperform other trees such as red-black trees when
recently accessed items are more likely to be accessed in the near
future.

Notably, this splay tree implementation is parameterized by a
reduction operation which lets you specify an extra accumulator value,
which can then be searched by efficiently."""
url {
  src:
    "https://ocaml.janestreet.com/ocaml-core/v0.11/files/splay_tree-v0.11.0.tar.gz"
  checksum: "md5=d6af8d78e638947266b8be21091d03fe"
}
