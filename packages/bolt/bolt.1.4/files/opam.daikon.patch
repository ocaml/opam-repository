--- bolt-1.4/src/support/daikon.ml	2012-10-26 21:19:41.000000000 +0200
+++ bolt-1.4.patched/src/support/daikon.ml	2017-12-04 13:32:20.053704588 +0100
@@ -92,7 +92,9 @@
         String.blit n 0 n' 0 3;
         String.blit insert 0 n' 3 len_insert;
         String.blit n 3 n' (3 + len_insert) (len_n - 3);
-        n', v)
+        (* Nyavlys: n' is a byte sequence of type bytes *)
+        (* Nyavlys: It should be cast back into a String *)
+        Bytes.to_string n', v)
       vars
 
 let tuple2 a_vb b_vb =
@@ -135,11 +137,24 @@
   (magic_kind, name ^ ":::ENTER") :: (List.flatten l)
 
 let exit name vars l =
+  (* Nyavlys: The following part of the code seems useless, except for
+  checking (?) whether a string is empty by possibly raising an
+  exception when accessing the first position of the string. *)
+  (* Nyavlys: I checked on previous versions of Ocaml, before Bytes
+  was introduced, and the result is the same. *)
+  (* Nyavlys: Provided tests still are successful *)
+  (* Nyavlys: See tests/04-daikon and test/05-paje *)
+  (*
   List.iter
     (fun (var_name, _) ->
       let var_name = String.copy var_name in
       var_name.[0] <- '<')
     vars;
+   *)
+  List.iter
+    (fun (var_name, _) ->
+      let _ = var_name.[0] in ())
+    vars;
   (magic_kind, name ^ ":::EXIT1") :: vars @ (List.flatten l)
 
 
