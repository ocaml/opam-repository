opam-version: "2.0"
maintainer: "unixjunkie@sdf.org"
authors: ["Francois Berenger"]
homepage: "https://github.com/UnixJunkie/oranger"
bug-reports: "https://github.com/UnixJunkie/oranger/issues"
dev-repo: "git+https://github.com/UnixJunkie/oranger.git"
license: "LGPL-2.1-only with OCaml-LGPL-linking-exception"
build: [
  ["dune" "build" "-p" name "-j" jobs]
  ["tar" "xzf" "0.9.11.tar.gz"]
  ["mkdir" "ranger-0.9.11/cpp_version/build"]
  ["sh" "-c" "cd ranger-0.9.11/cpp_version/build && %{conf-cmake:cmd}% ../"]
  [make "-C" "ranger-0.9.11/cpp_version/build"]
]
install: [
  ["cp" "ranger-0.9.11/cpp_version/build/ranger" "%{bin}%/ml_rf_ranger"]
]
depends: [
  "dune" {>= "1.0.0"}
  "conf-cmake" {build}
  "re"
  "dolog" {>= "6.0.0"}
  "batteries"
  "minicli" {>= "5.0.0"}
  "cpm"
  "line_oriented"
]
depopts: [
  "conf-gnuplot"
]
synopsis: "OCaml wrapper for the ranger (C++) random forests implementation"
description: """
Ranger is run from the command line and data are exchanged via text files.
This is quick and dirty, not a clean OCaml interface to ranger.
The oranger_rfr program allows to train/test a random-forests regressor model.
"""
extra-source "0.9.11.tar.gz" {
  src: "https://github.com/imbs-hl/ranger/archive/0.9.11.tar.gz"
  checksum: "md5=cf770dfdde5ef250bfd561ef2b0758ee"
}
url {
  src: "https://github.com/UnixJunkie/oranger/archive/v3.0.0.tar.gz"
  checksum: "md5=cbde380d8a168692bbafbfec10c8a753"
}
