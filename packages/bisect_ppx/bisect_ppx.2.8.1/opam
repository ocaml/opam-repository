opam-version: "2.0"

synopsis: "Code coverage for OCaml"
license: "MIT"
homepage: "https://github.com/aantron/bisect_ppx"
doc: "https://github.com/aantron/bisect_ppx"
bug-reports: "https://github.com/aantron/bisect_ppx/issues"

dev-repo: "git+https://github.com/aantron/bisect_ppx.git"
authors: [
  "Xavier Clerc <bisect@x9c.fr>"
  "Leonid Rozenberg <leonidr@gmail.com>"
  "Anton Bachin <antonbachin@yahoo.com>"
]
maintainer: [
  "Anton Bachin <antonbachin@yahoo.com>"
  "Leonid Rozenberg <leonidr@gmail.com>"
]

depends: [
  "base-unix"
  "cmdliner" {>= "1.0.0" & < "2.0.0"}
  "dune" {>= "2.7.0"}
  "ocaml" {>= "4.03.0"}
  "ppxlib" {>= "0.21.0" & < "0.26.0"}

  "ocamlformat" {with-test & = "0.16.0"}
]

build: [
  ["dune" "build" "-p" name "-j" jobs]
  ["dune" "build" "-p" name "-j" jobs "@compatible"] {with-test}
]

description: "Bisect_ppx helps you test thoroughly. It is a small preprocessor
that inserts instrumentation at places in your code, such as if-then-else and
match expressions. After you run tests, Bisect_ppx gives a nice HTML report
showing which places were visited and which were missed.

Usage is simple - add package bisect_ppx when building tests, run your tests,
then run the Bisect_ppx report tool on the generated visitation files."

url {
  src: "https://github.com/aantron/bisect_ppx/archive/2.8.1.tar.gz"
  checksum: [
    "sha256=d51292dab8d49a1487bddb8b9c0153a959382097589b0d017683a1d45ec48d93"
    "md5=e8831e6e99292f221ded6fb02652e2a5"
  ]
}
