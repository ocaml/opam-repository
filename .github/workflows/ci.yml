name: CI
on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      default_compiler: '5.0.0'
      default_opam: 'opam-2.1'
      revdeps_compilers: |
        ["4.14", "5.0"]
      compilers: |
        ["4.02","4.03","4.04","4.05","4.06","4.07",
         "4.08","4.09","4.10","4.11","4.12","4.13",
         "4.14","5.0"]
      distributions: |
        ["alpine:3.17","alpine:3.18",
         "archlinux",
         "debian:testing","debian:unstable",
         "fedora:37","fedora:38",
         "oraclelinux:8",
         "ubuntu:22.04","ubuntu:23.04"]
      extras: |
        ["afl", "flambda", "no-flat-float-array"]
      opam_versions: |
        ["opam-2.0", "opam-2.1"]
      packages: ${{ steps.packages.outputs.packages }}
      cache_key: v1-opam-${{ github.run_id }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: List packages to be tested
        id: packages
        run: |
          ./.github/scripts/packages.sh

  compilers:
    runs-on: ubuntu-latest
    needs: config
    strategy:
      fail-fast: false
      matrix:
        opam:  ${{ fromJson(needs.config.outputs.opam_versions) }}
        compiler: ${{ fromJson(needs.config.outputs.compilers) }}
        package: ${{ fromJson(needs.config.outputs.packages) }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Install OCaml
        uses: ./.github/install-ocaml
        with:
          compiler: ${{ matrix.compiler }}
      - name: Check if ${{ matrix.package }} is installable
        id: installable
        uses: ./.github/check-installable
        with:
          opam: ${{ matrix.opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }}
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ matrix.opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }} with tests
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ matrix.opam }}
          package: ${{ matrix.package }}
          env: |
            {"OPAMWITHTEST": "1"}
      - name: Get ${{ matrix.package }} revdeps
        id: revdeps
        if: contains(needs.config.outputs.revdeps_compilers, matrix.compiler) && matrix.opam == needs.config.outputs.default_opam
        run: |
          ./.github/scripts/revdeps.sh ${{ matrix.package }}
      - name: Save revdeps
        uses: cloudposse/github-action-matrix-outputs-write@0.3.1
        if: contains(needs.config.outputs.revdeps_compilers, matrix.compiler) && matrix.opam == needs.config.outputs.default_opam
        with:
          matrix-step-name: revdeps
          matrix-key: ${{ matrix.package }}_${{ matrix.compiler }}
          outputs: |-
            revdeps: ${{ steps.revdeps.outputs.revdeps }}

  revdeps_matrix:
    runs-on: ubuntu-latest
    needs: [compilers]
    outputs:
      shouldRun: ${{ steps.revdeps_matrix.outputs.shouldRun }}
      packages: ${{ steps.revdeps_matrix.outputs.packages }}
      revdeps: ${{ steps.revdeps_matrix.outputs.revdeps }}
      compilers: ${{ steps.revdeps_matrix.outputs.compilers }}
      exclude: ${{ steps.revdeps_matrix.outputs.exclude }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Fetch revdeps config matrix
        id: fetch_revdeps
        uses: cloudposse/github-action-matrix-outputs-read@main
        with:
          matrix-step-name: revdeps
      - name: Process and export revdeps
        id: revdeps_matrix
        uses: ./.github/revdeps-matrix
        with:
          revdeps: "${{ steps.fetch_revdeps.outputs.result }}"

  revdeps:
    runs-on: ubuntu-latest
    needs: [config, revdeps_matrix]
    if: needs.revdeps_matrix.outputs.shouldRun
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.revdeps_matrix.outputs.packages) }}
        revdep: ${{ fromJson(needs.revdeps_matrix.outputs.revdeps) }}
        compiler: ${{ fromJson(needs.revdeps_matrix.outputs.compilers) }}
        exclude: ${{ fromJson(needs.revdeps_matrix.outputs.exclude) }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Install OCaml
        uses: ./.github/install-ocaml
        with:
          compiler: ${{ matrix.compiler }}
      - name: Install ${{ matrix.package }} and ${{ matrix.revdep }}
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }} ${{ matrix.revdep }}

  distributions:
    runs-on: ubuntu-latest
    needs: config
    container:
      image: ${{ matrix.distribution }}
    strategy:
      fail-fast: false
      matrix:
        distribution: ${{ fromJson(needs.config.outputs.distributions) }}
        package: ${{ fromJson(needs.config.outputs.packages) }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Install system packages
        uses: ./.github/install-system-packages
        with:
          distribution: ${{ matrix.distribution }}
      - name: Install OCaml
        uses: ./.github/install-ocaml
        with:
          compiler: ${{ needs.config.outputs.default_compiler }}
      - name: Check if ${{ matrix.package }} is installable
        id: installable
        uses: ./.github/check-installable
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }}
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }} with tests
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
          env: |
            {"OPAMWITHTEST": "1"}

  macos:
    runs-on: macos-latest
    needs: config
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.config.outputs.packages) }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Install OCaml
        uses: ./.github/install-ocaml
        with:
          compiler: ${{ needs.config.outputs.default_compiler }}
      - name: Check if ${{ matrix.package }} is installable
        id: installable
        uses: ./.github/check-installable
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }}
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }} with tests
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
          env: |
            {"OPAMWITHTEST": "1"}

  extras:
    runs-on: ubuntu-latest
    needs: config
    strategy:
      fail-fast: false
      matrix:
        extra: ${{ fromJson(needs.config.outputs.extras) }}
        package: ${{ fromJson(needs.config.outputs.packages) }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1
      - name: Compute OCaml options
        id: ocaml_options
        run: |
          OCAML_OPTIONS=`echo "${{ matrix.extra }}" | tr '+' '\n' | while read i; do echo "ocaml-option-$i"; done | paste -sd ',' -`
          echo "OCaml options: $OCAML_OPTIONS"
          echo "ocaml_options=$OCAML_OPTIONS" >> $GITHUB_OUTPUT
      - name: Install OCaml
        uses: ./.github/install-ocaml
        with:
          compiler: 'ocaml-variants.${{ needs.config.outputs.default_compiler }}+options,${{ steps.ocaml_options.outputs.ocaml_options }}'
      - name: Check if ${{ matrix.package }} is installable
        id: installable
        uses: ./.github/check-installable
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }}
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
      - name: Install ${{ matrix.package }} with tests
        if: steps.installable.outputs.installable
        uses: ./.github/install-package
        with:
          opam: ${{ needs.config.outputs.default_opam }}
          package: ${{ matrix.package }}
          env: |
            {"OPAMWITHTEST": "1"}
