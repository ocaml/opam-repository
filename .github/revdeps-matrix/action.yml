name: Get revdeps matrix
inputs:
  revdeps:
    required: true
outputs:
  shouldRun:
    description: "Should run"
    value:  ${{ fromJson(steps.revdeps_matrix.outputs.result).shouldRun }}
  packages:
    description: "Packages"
    value: ${{ toJson(fromJson(steps.revdeps_matrix.outputs.result).packages) }}
  revdeps:
    description: "Revdeps"
    value: ${{ toJson(fromJson(steps.revdeps_matrix.outputs.result).revdeps) }}
  compilers:
    description: "Compilers"
    value: ${{ toJson(fromJson(steps.revdeps_matrix.outputs.result).compilers) }}
  exclude:
    description: "Exclude"
    value: ${{ toJson(fromJson(steps.revdeps_matrix.outputs.result).exclude) }}
runs:
  using: composite
  steps:
    - name: Collect revdeps
      id: revdeps_matrix
      uses: actions/github-script@v6
      with:
        script: |
          const config = JSON.parse('${{ inputs.revdeps }}').revdeps;

          const compilers = new Set();
          const packages = new Set();
          const revdeps = new Set(); 
          const exclude = [];
          const revdepsConfigs = {};

          Object.keys(config).forEach((key) => {
            const [p, compiler] = key.split("_");
            compilers.add(compiler);
            packages.add(p);
            config[key].forEach((revdep) => {
              revdeps.add(revdep);
              revdepsConfigs[revdep] ||= { compilers: [], packages: [] }
              revdepsConfigs[revdep].compilers.push(compiler);
              revdepsConfigs[revdep].packages.push(p);
            });
          });

          revdeps.forEach((revdep) =>
            compilers.forEach((compiler) =>
              packages.forEach((p) => {
                if (!revdepsConfigs[revdep].compilers.includes(compiler) || 
                    !revdepsConfigs[revdep].packages.includes(p)) {
                  exclude.push({ revdep: revdep, package: p, compiler });
                }
              })
            )
          );

          const matrix = {
            shouldRun: packages.length !== 0,
            compilers: [...compilers],
            packages: [...packages],
            revdeps: [...revdeps],
            exclude
          }

          console.log(`Revdeps matrix: ${JSON.stringify(matrix, null, 2)}`);
          return matrix; 
